#include <stdio.h>
#include <stdlib.h>
#include <time.h>
int mystrlen(char* str)
{
	int i;
	for (i = 0; *str; str++, i++);
	return i;
}
int mylower(char* str)
{
	for (; *str; str++)
		if (!islower(*str)) return 0;
	return 1;
}
void mystrcpy(char* cp, char* ori)
{
	for (; *cp = *ori; cp++, ori++);
}
char mywords(char* string)
{
	FILE* ip;
	char str[100], emp[100];
	int i, fi, nthWord;
	ip = fopen("C:\\Users\\이민경\\Downloads\\__lottoHangman_frame201912\\_C언어\\linux_words.txt", "r");
	if (!ip)
	{
		fprintf(stderr, "file open error\n");
		mystrcpy(string, "");
		return 0;
	}
	srand(time(0));
	printf("%d %d\n", RAND_MAX, rand());

#define LastWord 479623
#define Min_Length 6

	nthWord = (int)((float)rand() / (float)RAND_MAX * ((float)LastWord) + 0.5);
	if (nthWord + 100 > LastWord) nthWord = nthWord - 100;
	printf("nth word = %d\n", nthWord);
	for (i = 1; i < nthWord; i++)
	{
		fi = fscanf(ip, "%s", str);
		if (fi == EOF) break;
	}
	for (;;)
	{
		if (mystrlen(str) >= Min_Length && mylower(str))
		{
			printf("selected word : %s\n", str);
			mystrcpy(string, str);
			break;
		}
		fi = fscanf(ip, "%s", str);
		if (fi == EOF) break;
	}
	fclose(ip);
	return 0;
}
int mystrcmp(char* a, char* b)
{
	for (; *a && *b && *a == *b; a++, b++);
	return *a - *b;
}
int main()
{
	int num[5][6], i, j, k;
	char word[200], guess, temp, tmp[100] = { NULL }, already[100] = { 0 };
	char currentCorrect[200] = "******************************************************************************************************************************";
	int chance, cnt = 0, cnt2 = 0, cnt3 = 0, fin = 0, check = 0;
	srand(time(NULL));
	for (i = 0; i < 5; i++) // 로또
	{
		for (j = 0; j < 6; j++)
		{
			num[i][j] = rand() % 45 + 1;
			for (k = 0; k < j; k++)
			{
				if (num[i][j] == num[i][k])
				{
					j--;
					break;
				}
			}
		}
		for (j = 0; j < 6; j++) printf("%d ", num[i][j]);
		printf("\n");
	}
	if (num[0][0] >= 1 && num[0][0] <= 9) chance = 1;
	else if (num[0][0] >= 10 && num[0][0] <= 19) chance = 2;
	else if (num[0][0] >= 20 && num[0][0] <= 29) chance = 3;
	else if (num[0][0] >= 30 && num[0][0] <= 39) chance = 4;
	else if (num[0][0] >= 40 && num[0][0] <= 45) chance = 5;
	// 행맨
	mywords(word);
	currentCorrect[mystrlen(word)] = 0;
	printf("You have only %d chances left\n", chance);
	printf("guess a character\n");
	while (chance > 0 && fin == 0)
	{
		cnt = 0; cnt2 = 0; check = 0;
		scanf("%c", &guess);
		if (guess == '\n') continue;
		else printf("you have entered %c\n", guess);
		for (i = 0; currentCorrect[i]; i++) // 맞춘 알파벳 중복 체크
		{
			if (guess == currentCorrect[i])
			{
				printf("already guessed %c\n", guess);
				cnt++;
				cnt2++;
				break;
			}
		}
		for (j = 0; word[j] && currentCorrect[j]; j++) // 맞춘 알파벳 나타내기
		{
			if (!(cnt == 0)) break;
			if (guess == word[j])
			{
				temp = currentCorrect[j];
				currentCorrect[j] = guess;
				cnt2++;
			}
		}

		if (cnt2 == 0) // 틀린 알파벳 판별
		{
			tmp[cnt3] = already[cnt3];
			already[cnt3] = guess;
			for (i = 0; i < cnt3 && already[i]; i++) // 틀린 알파벳 중복 체크
			{
				if (guess == already[i])
				{
					printf("already guessed %c\n", guess);
					check++;
				}
			}
			if (check==0) chance--;
			cnt3++;
		}

		printf("You have only %d chances left\n", chance);
		printf("Current guessed string is %s\n", currentCorrect);

		if (mystrcmp(currentCorrect, word) == 0) // 모든 알파벳 맞췄을 때 (성공)
		{
			printf("Great\n");
			fin++;
			continue;
		}
		printf("guess a character\n");
		if (chance == 0) // 기회 끝났을 때 (실패)
		{
			printf("Sorry, try more words\n");
			printf("correct word was %s\n", word);
		}
	}
	return 0;
}
